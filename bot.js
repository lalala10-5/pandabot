const Discord = require('discord.js');
const client = new Discord.Client();
const ayarlar = require('./ayarlar.json');
const chalk = require('chalk');
const fs = require('fs');
const moment = require('moment');
require('./util/eventLoader')(client);

var prefix = ayarlar.prefix; "h!"

const log = message => {
  console.log(`[${moment().format('YYYY-MM-DD HH:mm:ss')}] ${message}`);
};

client.commands = new Discord.Collection();
client.aliases = new Discord.Collection();
fs.readdir('./komutlar/', (err, files) => {
  if (err) console.error(err);
  log(`${files.length} komut y√ºklenecek.`);
  files.forEach(f => {
    let props = require(`./komutlar/${f}`);
    log(`Y√ºklenen komut: ${props.help.name}.`);
    client.commands.set(props.help.name, props);
    props.conf.aliases.forEach(alias => {
      client.aliases.set(alias, props.help.name);
    });
  });
});

client.reload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};

client.load = command => {
  return new Promise((resolve, reject) => {
    try {
      let cmd = require(`./komutlar/${command}`);
      client.commands.set(command, cmd);
      cmd.conf.aliases.forEach(alias => {
        client.aliases.set(alias, cmd.help.name);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};

client.unload = command => {
  return new Promise((resolve, reject) => {
    try {
      delete require.cache[require.resolve(`./komutlar/${command}`)];
      let cmd = require(`./komutlar/${command}`);
      client.commands.delete(command);
      client.aliases.forEach((cmd, alias) => {
        if (cmd === command) client.aliases.delete(alias);
      });
      resolve();
    } catch (e){
      reject(e);
    }
  });
};


// Mustafa Eren'in Kodlamasƒ± [Ba≈ülangƒ±√ß]
client.on(`ready`,() => {

   client.user.setActivity(`Pandasal Power | h!yardƒ±m | Dev G√ºncelleme`, { type: 'WATCHING' });
    client.user.setActivity(`B√ºt√ºn Komutlar Aktif h!davet`, { type: 'WATCHING' });
	 client.user.setActivity(`Yazacaƒüƒ±n Komutlarƒ±!`, { type: 'WATCHING' });
	  client.user.setActivity(`Yeni Komutlar | h!8ball | h!stres√ßarkƒ± | h!emojiyazƒ± ! | h!yardƒ±müêº`, { type: 'WATCHING' });

});
// Mustafa Eren'in Kodlamasƒ± [Biti≈ü]

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'naber') {
    msg.reply('**ƒ∞yidir Moruq Senden ?**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'ezik') {
    msg.reply('**L√ºtfen Kimseyi K√∂t√ºleme ! **');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'fuck') {
    msg.reply('**UPS K√úF√úR ETME**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'Kimsin lan sen') {
    msg.reply('**Olm Hayƒ±rdƒ±r Artislik Yapamazsƒ±n Burda ! (Kime Yaptƒ±ysan)**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'kimsin lan sen') {
    msg.reply('**Olm Hayƒ±rdƒ±r Artislik Yapamazsƒ±n Burda ! (Kime Yaptƒ±ysan)***');
  }
});
client.on('message', msg => {
  if (msg.content.toLowerCase() === 'Fuck') {
	  msg.delete(30)
    msg.reply('**LAN G√ñT BENƒ∞Mƒ∞ KANDIRCAN ƒ∞NGƒ∞Lƒ∞ZCEMƒ∞Z ƒ∞Yƒ∞ EVELALLAH !**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'Naber') {
    msg.reply('**ƒ∞yidir Moruq Senden ?**');
  }
});

client.on('message', msg => {
  if (msg.content === 'h!panda') {
    msg.reply ('** SaFIRTINA#4616 Ve Ben**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'discord.gg') {
   msg.delete(30)
    msg.reply('Reklam Engellendi :no_entry_sign:');
  }
});

exports.run = (client, message, args) => {
	let mesaj = args.slice(0).join('h!s√∂v ');
	if (mesaj.length < 1) return message.reply('**Kime S√∂vmek ƒ∞stediƒüin Bana Vahiy Mi Gelecek ? !**');
    const embed = new Discord.RichEmbed()
    .setAuthor('')
    .setColor(3447003)
    .setDescription.random(` ${mesaj} ` + message.author.username + '  Ben Senin Ta ananƒ±n amƒ±na teletabinin antenlerini sokar g√∂beƒüindeki televizyondan ulusal porno yayƒ±nƒ± yaparƒ±mananƒ± √∂zg√ºrl√ºk heykelinin yanmayan me≈üalesinde siker ≈üehri duman ederimhollywood bulvarƒ±nda donla gezen ananƒ±n amƒ±na topuklu ayakkabƒ± sokayƒ±mananƒ± ikiz kulelerinin yedinci katƒ±na cƒ±kartƒ±r amƒ±na u√ßakla girerim..ananƒ±n o dazlak kafasƒ±na teflon tavayla vurur sersemletir sikerim.ananƒ±n buru≈ümu≈ü amƒ±na tefal √ºt√º basar d√ºmd√ºz ederim.ananƒ±n amƒ±na windows 7 kurar mavi ekran hatasƒ± verinceye kadar sikerim')
    return message.channel.sendEmbed(embed);
};

exports.run = (client, message, args) => {
	let mesaj = args.slice(0).join(' h!yumruck-at');
	if (mesaj.length < 1) return message.reply('**Kime Yumruk Atcaƒüƒ±nƒ± Yazmalƒ±sƒ±n**');
    const embed = new Discord.RichEmbed()
    .setAuthor('')
    .setColor(3447003)
    .setDescription(` ${mesaj} ` + message.author.username + '  wew g√ºzel yumruktu  Canƒ±n Acƒ±mƒ±≈ü Olmalƒ±! https://www.tenor.co/sPoM.gif')

    return message.channel.sendEmbed(embed);
};

client.on('message', msg => {
  if (msg.content === 'h!yumruk-at') {
   msg.delete(30)
    msg.channel.send('Ohh ƒ∞yi Vurdu Helal Tonti≈üime :D https://www.tenor.co/xzIx.gif ');
  }
});

 client.on('message', msg => {
  if (msg.content.toLowerCase() === 'aq') {
   msg.delete(30)
    msg.reply('K√ºf√ºr Etme ! :no_entry_sign:');
  }
});


client.on('message', msg => {
  if (msg.content.toLowerCase() === 'mk') {
   msg.delete(30)
    msg.reply('K√ºf√ºr Etme ! :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'mal') {
   msg.delete(30)
    msg.reply('Hakaret Etme ! :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'lan') {
   msg.delete(30)
    msg.reply('Argo Kelime Yasak Bunu Bilmiyormusunn :panda_face: :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'g√∂t') {
   msg.delete(30)
    msg.reply('K√ºf√ºr Etme ! :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'amk') {
   msg.delete(30)
    msg.reply('K√ºf√ºr Etme ! :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'hayvan') {
   msg.delete(30)
    msg.reply('L√ºtfen Hayvansal Hakaret Etme !!! :no_entry_sign:');
  }
});

client.on('message', msg => {
  if (msg.content === 'Selamun Aleyk√ºm') {
    msg.reply('Aleyk√ºm Selam Ho≈ügeldin :smiley:');
  }
});

client.on('message', msg => {
  if (msg.content === 'h!yenilikler') {
    msg.channel.send('h!s√∂v Komutlarƒ± Eklendi h!aƒülat Komutlarƒ± Yarƒ±n Eklenicektir Yarƒ±n Daha √áok Yenilikler Ve Daha Fazlasƒ± ! Sende Botumuzu Sunucuna Eklemek ƒ∞stiyorsan : **https://discordapp.com/api/oauth2/authorize?client_id=474184965635047425&permissions=8&scope=bot**');
  }
});


client.on('message', msg => {
  if (msg.content.toLowerCase() === 'sa') {
    msg.reply('Aleyk√ºm Selam Ho≈ügeldin :smirk: ');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'nbr') {
    msg.reply('**ƒ∞yidir Moruq Senden ?**');
  }
});

client.on('message', msg => {
  if (msg.content.toLowerCase() === 'hayƒ±rsƒ±z bot') {
    msg.reply('**√ñyle Olsun :sob: :sob:** ');
  }
});

client.elevation = message => {
  if(!message.guild) {
	return; }
  let permlvl = 0;
  if (message.member.hasPermission("BAN_MEMBERS")) permlvl = 2;
  if (message.member.hasPermission("ADMINISTRATOR")) permlvl = 3;
  if (message.author.id === ayarlar.sahip) permlvl = 4;
  return permlvl;
};

var regToken = /[\w\d]{24}\.[\w\d]{6}\.[\w\d-_]{27}/g;
// client.on('debug', e => {
//   console.log(chalk.bgBlue.green(e.replace(regToken, 'that was redacted')));
// });

client.on('warn', e => {
  console.log(chalk.bgYellow(e.replace(regToken, 'that was redacted')));
});

client.on('error', e => {
  console.log(chalk.bgRed(e.replace(regToken, 'that was redacted')));
});

client.login(ayarlar.token);
